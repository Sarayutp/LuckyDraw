"""
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö LuckyDraw System
"""
from app import app
from models import db, Event, Participant, Prize
from datetime import datetime

def create_sample_data():
    with app.app_context():
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        db.create_all()
        
        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        Event.query.delete()
        Participant.query.delete()
        Prize.query.delete()
        db.session.commit()
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á 1: Classic Mode
        classic_event = Event(
            name="‡∏á‡∏≤‡∏ô‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏õ‡∏µ‡πÉ‡∏´‡∏°‡πà ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ABC",
            event_type="classic",
            created_at=datetime.utcnow()
        )
        db.session.add(classic_event)
        db.session.flush()  # Get ID
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Classic Event
        classic_participants = [
            "‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ", "‡∏ß‡∏£‡∏£‡∏ì‡∏≤ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°", "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ ‡∏£‡∏ß‡∏¢‡∏°‡∏≤‡∏Å", 
            "‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å", "‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞ ‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç", "‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏µ ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å",
            "‡∏õ‡∏£‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏ê ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á", "‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß ‡∏™‡∏î‡πÉ‡∏™", "‡∏™‡∏∏‡∏Å‡∏±‡∏ç‡∏ç‡∏≤ ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç",
            "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡∏â‡∏•‡∏≤‡∏î"
        ]
        
        for name in classic_participants:
            participant = Participant(name=name, event_id=classic_event.id)
            db.session.add(participant)
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Classic Event
        classic_prizes = [
            ("iPhone 15 Pro", 1),
            ("iPad Air", 2),
            ("AirPods Pro", 3),
            ("‡∏ö‡∏±‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç 5,000 ‡∏ö‡∏≤‡∏ó", 2),
            ("‡∏ö‡∏±‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç 1,000 ‡∏ö‡∏≤‡∏ó", 5)
        ]
        
        for prize_name, quantity in classic_prizes:
            prize = Prize(
                name=prize_name, 
                total_quantity=quantity,
                remaining_quantity=quantity,
                event_id=classic_event.id
            )
            db.session.add(prize)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á 2: Exchange Mode
        exchange_event = Event(
            name="‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç Secret Santa",
            event_type="exchange",
            created_at=datetime.utcnow(),
            is_test_mode=True  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        )
        db.session.add(exchange_event)
        db.session.flush()  # Get ID
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Exchange Event
        exchange_participants = [
            "‡∏≠‡∏•‡∏¥‡∏ã ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå", "‡∏ö‡πá‡∏≠‡∏ö ‡∏ö‡∏¥‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå", "‡∏ä‡∏≤‡∏£‡πå‡∏•‡∏µ ‡∏ä‡∏≤‡∏£‡πå‡∏°",
            "‡πÑ‡∏î‡∏≠‡∏≤‡∏ô‡∏≤ ‡∏î‡∏£‡∏µ‡∏°", "‡πÄ‡∏≠‡πá‡∏î‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î ‡πÄ‡∏≠‡πÄ‡∏•‡πÅ‡∏Å‡∏ô‡∏ã‡πå", "‡∏ü‡∏¥‡πÇ‡∏≠‡∏ô‡∏≤ ‡πÄ‡∏ü‡∏µ‡∏¢‡∏£‡πå"
        ]
        
        for name in exchange_participants:
            participant = Participant(name=name, event_id=exchange_event.id)
            db.session.add(participant)
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        db.session.commit()
        
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        print(f"üìã ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å ID: {classic_event.id}")
        print(f"üîó http://localhost:5001/event/{classic_event.id}")
        print(f"üéÅ ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô ID: {exchange_event.id}")
        print(f"üîó http://localhost:5001/event/{exchange_event.id}")

if __name__ == "__main__":
    create_sample_data()